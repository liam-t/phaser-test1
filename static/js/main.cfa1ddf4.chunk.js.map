{"version":3,"sources":["phaser/createAnims.js","phaser/classes/Player.js","phaser/scenes/Scene1.js","components/Main/index.jsx","App.jsx","serviceWorker.js","index.js","assets/sprites/ryu/ryu1.spr","assets/sprites/ryu/ryu1.atlas","assets/sprites/industralBackground/foreground.png.img","assets/sprites/industralBackground/buildings.png.img","assets/sprites/industralBackground/far-buildings.png.img","assets/sprites/industralBackground/bg.png.img"],"names":["createAnims","scene","anims","create","key","frames","generateFrameNames","prefix","start","end","frameRate","repeat","Player","sys","game","canvas","width","height","keys","input","keyboard","addKeys","left","Input","Keyboard","KeyCodes","A","right","D","up","W","down","S","kick","I","jumpTimer","configurePhysics","assignUpdateFunction","setScale","play","thisClass","sceneUpdate","update","setUpdate","physics","world","enableBody","body","setBounce","setCollideWorldBounds","this","velocity","y","loop","time","setVelocityX","flipX","isDown","walkBackward","walkForward","onFloor","idle","jump","GameObjects","Sprite","Scene1","Object","entries","bgLayers","forEach","i","length","tilePositionX","cameras","main","scrollX","tilePositionY","scrollY","newFunc","player","bgMap","name","naturalWidth","naturalHeight","load","atlas","playerSpriteSheet","playerAtlas","image","foreground","buildings","farBuildings","bg","gameWidth","gameHeight","add","tileSprite","setOrigin","existing","bounds","setTo","setBounds","startFollow","Scene","Main","config","parent","type","CANVAS","scale","mode","Scale","FIT","expandParent","autoCenter","CENTER_BOTH","backgroundColor","pixelArt","default","arcade","gravity","Game","MainOuter","id","defaultProps","styled","div","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.cfa1ddf4.chunk.js","sourcesContent":["const createAnims = (scene) => {\n  scene.anims.create({\n    key: 'idle',\n    frames: scene.anims.generateFrameNames('player', {\n      prefix: 'idle-',\n      start: 1,\n      end: 4,\n    }),\n    frameRate: 8,\n    repeat: -1,\n  });\n  scene.anims.create({\n    key: 'jump',\n    frames: scene.anims.generateFrameNames('player', {\n      prefix: 'jump-',\n      start: 1,\n      end: 7,\n    }),\n    frameRate: 8,\n    // repeat: -1,\n  });\n  scene.anims.create({\n    key: 'jumpIdle',\n    frames: scene.anims.generateFrameNames('player', {\n      prefix: 'jump-',\n      start: 7,\n      end: 7,\n    }),\n    frameRate: 8,\n    // repeat: -1,\n  });\n  scene.anims.create({\n    key: 'kick',\n    frames: scene.anims.generateFrameNames('player', {\n      prefix: 'kick-',\n      start: 1,\n      end: 2,\n    }),\n    frameRate: 8,\n    // repeat: -1,\n  });\n  scene.anims.create({\n    key: 'forward',\n    frames: scene.anims.generateFrameNames('player', {\n      prefix: 'forward-',\n      start: 1,\n      end: 6,\n    }),\n    frameRate: 8,\n    repeat: -1,\n  });\n  scene.anims.create({\n    key: 'backward',\n    frames: scene.anims.generateFrameNames('player', {\n      prefix: 'backward-',\n      start: 1,\n      end: 6,\n    }),\n    frameRate: 8,\n    repeat: -1,\n  });\n  scene.anims.create({\n    key: 'turn',\n    frames: scene.anims.generateFrameNames('player', {\n      prefix: 'turn-',\n      start: 1,\n      end: 6,\n    }),\n    frameRate: 8,\n  });\n};\n\nexport default createAnims;\n","import { GameObjects, Input } from 'phaser';\nimport createAnims from 'phaser/createAnims';\n\nclass Player extends GameObjects.Sprite {\n  static assignUpdateFunction(thisClass, scene) {\n    const sceneUpdate = scene.update;\n    scene.setUpdate(() => {\n      sceneUpdate();\n      thisClass.update();\n    });\n  }\n\n  static configurePhysics(thisClass, scene) {\n    scene.physics.world.enableBody(thisClass);\n    thisClass.body.setBounce(0.2);\n    thisClass.body.setCollideWorldBounds(true);\n  }\n\n\n  constructor(scene) {\n    const {\n      canvas: {\n        width,\n        height,\n      },\n    } = scene.sys.game;\n    super(scene, width * 0.1, height * 0.9, 'player');\n\n    this.scene = scene;\n\n    createAnims(scene);\n\n    this.keys = scene.input.keyboard.addKeys({\n      left: Input.Keyboard.KeyCodes.A,\n      right: Input.Keyboard.KeyCodes.D,\n      up: Input.Keyboard.KeyCodes.W,\n      down: Input.Keyboard.KeyCodes.S,\n      kick: Input.Keyboard.KeyCodes.I,\n    });\n\n    this.jumpTimer = 0;\n\n    Player.configurePhysics(this, scene);\n    Player.assignUpdateFunction(this, scene);\n\n    this.setScale(2);\n    this.anims.play('idle');\n  }\n\n  jump() {\n    this.anims.play('jump', true);\n    this.body.velocity.y = -2400;\n    this.jumpTimer = this.scene.game.loop.time + 750;\n  }\n\n  kick() {\n    this.anims.play('kick', true);\n  }\n\n  walkBackward() {\n    this.body.setVelocityX(-300);\n    this.anims.play('backward', true);\n    this.flipX = false;\n  }\n\n  walkForward() {\n    this.body.setVelocityX(300);\n    this.anims.play('forward', true);\n    this.flipX = false;\n  }\n\n  idle() {\n    this.body.setVelocityX(0);\n    this.anims.play('idle', true);\n  }\n\n  update() {\n    const {\n      left,\n      right,\n      up,\n      kick,\n    } = this.keys;\n\n    if (kick.isDown) this.kick();\n    else if (left.isDown) this.walkBackward();\n    else if (right.isDown) this.walkForward();\n    else if (!this.body.onFloor()) this.anims.play('jumpIdle');\n    else this.idle();\n\n    if (\n      up.isDown && this.body.onFloor() && this.scene.game.loop.time > this.jumpTimer\n    ) this.jump();\n  }\n}\n\nexport default Player;\n","import { Scene } from 'phaser';\nimport playerSpriteSheet from 'assets/sprites/ryu/ryu1.spr';\nimport playerAtlas from 'assets/sprites/ryu/ryu1.atlas';\nimport Player from 'phaser/classes/Player';\nimport foreground from 'assets/sprites/industralBackground/foreground.png.img';\nimport buildings from 'assets/sprites/industralBackground/buildings.png.img';\nimport farBuildings from 'assets/sprites/industralBackground/far-buildings.png.img';\nimport bg from 'assets/sprites/industralBackground/bg.png.img';\n\n\nclass Scene1 extends Scene {\n  constructor() {\n    super('Scene1');\n    this.player = null;\n\n    this.bgMap = [\n      {\n        name: 'bg',\n        naturalWidth: 272,\n        naturalHeight: 160,\n      },\n      {\n        name: 'farBuildings',\n        naturalWidth: 213,\n        naturalHeight: 142,\n      },\n      {\n        name: 'buildings',\n        naturalWidth: 272,\n        naturalHeight: 150,\n      },\n      {\n        name: 'foreground',\n        naturalWidth: 272,\n        naturalHeight: 104,\n      },\n    ];\n    this.bgLayers = {};\n  }\n\n  preload() {\n    this.load.atlas(\n      'player',\n      playerSpriteSheet,\n      playerAtlas,\n    );\n    this.load.image('foreground', foreground);\n    this.load.image('buildings', buildings);\n    this.load.image('farBuildings', farBuildings);\n    this.load.image('bg', bg);\n  }\n\n  create() {\n    const {\n      canvas: {\n        width: gameWidth,\n        height: gameHeight,\n      },\n    } = this.sys.game;\n    // const tallestBgLayer = this.bgMap.reduce((acc, item) => Math.max(acc, item.naturalHeight), 0);\n    this.bgMap.forEach(({ name, naturalHeight }, i) => {\n      // const yOffset = tallestBgLayer - naturalHeight;\n      this.bgLayers[name] = this.add.tileSprite(0, gameHeight - ((naturalHeight / 2)), gameWidth * 5, naturalHeight, name);\n      this.bgLayers[name].setScale(2);\n      this.bgLayers[name].setOrigin(0, 0.75); // why..\n      // this.bgLayers[name].tilePositionX = this.cameras.main.scrollX * 0.5 * i;\n    });\n\n    this.player = new Player(this);\n    this.add.existing(this.player);\n\n    // this.cameras.main.setViewport(200, 150, 400, 300);\n    this.physics.world.bounds.setTo(0, 0, gameWidth * 5, gameHeight);\n    this.cameras.main.setBounds(0, 0, gameWidth * 5, gameHeight);\n    this.cameras.main.startFollow(this.player, true, 0.1, 0.1, gameWidth * -0.1);\n  }\n\n  update = () => {\n    Object.entries(this.bgLayers).forEach(([key, val], i, { length }) => {\n      this.bgLayers[key].tilePositionX = this.cameras.main.scrollX * 0.005 * (i * i * i);\n      this.bgLayers[key].tilePositionY = this.cameras.main.scrollY * 0.005 * (i * i);\n    });\n  };\n\n  setUpdate = (newFunc) => {\n    this.update = newFunc;\n  };\n}\n\nexport default Scene1;\n","/* eslint-disable react/no-this-in-sfc */\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Game, Scale, CANVAS } from 'phaser';\nimport Scene1 from 'phaser/scenes/Scene1';\n// import create from './create';\n// import PT from 'proptypes';\n\nconst propTypes = {};\nconst defaultProps = {};\n\n\nconst Main = () => {\n  // React.useEffect(() => {});\n  const config = {\n    parent: 'phaserParent',\n    type: CANVAS,\n    width: 950,\n    height: 500,\n    scale: {\n      mode: Scale.FIT,\n      parent: 'phaserParent',\n      expandParent: true,\n      // width: '100%',\n      autoCenter: Scale.CENTER_BOTH,\n      // height: 600,\n    },\n    backgroundColor: '#000000',\n    scene: [Scene1],\n    pixelArt: true,\n    physics: {\n      default: 'arcade',\n      arcade: {\n        gravity: {\n          y: 9000,\n        },\n      },\n    },\n  };\n\n  const phaserGame = new Game(config);\n\n  return <MainOuter id=\"phaserParent\" />;\n};\nMain.propTypes = propTypes;\nMain.defaultProps = defaultProps;\n\nexport default Main;\n\nconst MainOuter = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100vh;\n  background-color: black;\n`;\n","import React from 'react';\nimport Main from './components/Main/index';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ryu1.591d7afc.spr\";","module.exports = __webpack_public_path__ + \"static/media/ryu1.552be6d4.atlas\";","module.exports = __webpack_public_path__ + \"static/media/foreground.png.2b9bb58d.img\";","module.exports = __webpack_public_path__ + \"static/media/buildings.png.ac8b3f25.img\";","module.exports = __webpack_public_path__ + \"static/media/far-buildings.png.94b1cb88.img\";","module.exports = __webpack_public_path__ + \"static/media/bg.png.2ccf4543.img\";"],"sourceRoot":""}